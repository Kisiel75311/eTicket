openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost
  description: Generated server url
paths:
  /api/auth/signup:
    post:
      tags:
      - auth-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
  /api/auth/signout:
    post:
      tags:
      - auth-controller
      operationId: logoutUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
  /api/auth/signin:
    post:
      tags:
      - auth-controller
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
  /api/auth/addController:
    post:
      tags:
      - auth-controller
      operationId: addController
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
  /api/accounts/topUpAccount/{amount}:
    post:
      tags:
      - passenger-controller
      operationId: addCredit
      parameters:
      - name: amount
        in: path
        required: true
        schema:
          type: number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
  /api/accounts/buyTicket/{ticketTypeId}/{vehicleId}:
    post:
      tags:
      - passenger-controller
      operationId: buyTicket
      parameters:
      - name: ticketTypeId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: vehicleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketDto'
  /api/accounts/:
    post:
      tags:
      - account-controller
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
  /api/tickets/types:
    get:
      tags:
      - ticket-controller
      operationId: getAllTicketTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketTypeDto'
  /api/tickets/all:
    get:
      tags:
      - ticket-controller
      operationId: getAllTickets
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketDto'
  /api/ticket-controller/validate-ticket:
    get:
      tags:
      - ticket-controller-controller
      operationId: validateTicket
      parameters:
      - name: ticketCode
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: vehicleId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketDto'
  /api/accounts/transactions:
    get:
      tags:
      - passenger-controller
      operationId: getPasengerTransactions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionDto'
  /api/accounts/transactions/{transactionId}:
    get:
      tags:
      - passenger-controller
      operationId: getTransactionDetails
      parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDto'
  /api/accounts/tickets:
    get:
      tags:
      - passenger-controller
      operationId: getPassengerTickets
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketDto'
  /api/accounts/details:
    get:
      tags:
      - account-controller
      operationId: getAccountById
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
  /api/accounts/all:
    get:
      tags:
      - account-controller
      operationId: getAllAccounts
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDto'
components:
  schemas:
    SignupRequest:
      required:
      - email
      - password
      - username
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
    MessageResponse:
      type: object
      properties:
        message:
          type: string
    LoginRequest:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    UserInfoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            type: string
        balance:
          type: number
    AccountDto:
      type: object
      properties:
        accountName:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
          - ROLE_PASSENGER
          - ROLE_CONTROLLER
          - ROLE_ADMIN
        balance:
          type: number
    TicketDto:
      type: object
      properties:
        ticketCode:
          type: integer
          format: int64
        ticketType:
          $ref: '#/components/schemas/TicketTypeDto'
        purchaseDate:
          type: string
          format: date-time
        validityDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        checked:
          type: boolean
        isActivated:
          type: boolean
        vehicleId:
          type: integer
          format: int64
        remainingValidityTime:
          type: string
    TicketTypeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
          format: double
    TransactionDto:
      type: object
      properties:
        transactionDate:
          type: string
          format: date-time
        ticket:
          $ref: '#/components/schemas/TicketDto'
